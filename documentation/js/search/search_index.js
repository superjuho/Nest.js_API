var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.861,1,2.201]],["body/modules/AppModule.html",[0,1,1,4.295,2,0.985,3,1.542,4,2.242,5,2.242,6,3.326,7,0.028,8,3.326,9,3.326,10,3.326,11,3.326,12,3.326,13,3.326,14,1.795,15,1.234,16,1.234,17,0.209,18,0.181,19,0.181,20,2.662,21,3.262,22,0.47,23,2.662,24,0.469,25,2.662,26,2.662,27,2.662,28,2.662,29,2.662,30,1.592,31,2.662,32,2.662,33,2.662,34,2.662,35,2.662,36,0.209,37,0.049,38,0.016,39,0.016]],["title/controllers/AuthController.html",[40,1.233,41,2.201]],["body/controllers/AuthController.html",[7,0.027,17,0.243,18,0.211,19,0.211,22,0.389,24,0.547,36,0.243,37,0.058,38,0.018,39,0.018,40,1.148,41,2.853,42,1.148,43,2.614,44,1.856,45,3.104,46,0.462,47,1.487,48,3.639,49,3.639,50,2.614,51,2.782,52,1.384,53,3.104,54,0.762,55,3.104,56,1.487,57,1.487,58,0.762,59,1.384,60,3.088,61,1.487,62,2.614,63,4.322,64,3.104,65,2.716,66,2.614,67,1.856,68,3.104,69,3.104,70,2.049,71,3.104,72,1.331,73,3.104,74,1.487,75,3.104,76,3.104,77,3.104,78,3.104,79,3.104]],["title/classes/AuthData.html",[37,0.062,80,2.201]],["body/classes/AuthData.html",[7,0.027,17,0.301,18,0.261,19,0.261,22,0.301,36,0.301,37,0.092,38,0.02,39,0.02,46,0.571,52,1.598,54,0.879,58,0.879,80,3.293,81,1.529,82,3.236,83,1.985,84,1.906,85,3.657,86,1.407,87,2.984,88,3.843,89,3.843,90,2.782,91,2.567,92,1.648]],["title/classes/AuthDto.html",[37,0.062,51,1.545]],["body/classes/AuthDto.html",[7,0.027,17,0.299,18,0.26,19,0.26,22,0.299,36,0.299,37,0.092,38,0.02,39,0.02,46,0.568,51,2.304,52,1.592,54,0.876,58,0.876,81,1.521,83,1.979,86,1.404,87,2.286,90,2.774,91,2.304,92,1.639,93,3.218,94,3.648,95,4.653,96,3.822,97,3.822,98,3.822,99,4.186]],["title/classes/AuthDto-1.html",[37,0.052,51,1.293,100,2.059]],["body/classes/AuthDto-1.html",[7,0.027,17,0.28,18,0.243,19,0.243,22,0.28,36,0.28,37,0.088,38,0.019,39,0.019,46,0.531,51,2.203,52,1.712,54,0.942,58,0.942,81,1.422,83,1.892,84,1.839,86,1.367,87,2.136,90,2.684,91,2.641,92,1.532,101,3.008,102,4.501,103,4.501,104,2.598,105,3.572,106,3.572,107,3.572,108,3.572,109,4.756]],["title/modules/AuthModule.html",[0,0.861,6,1.994]],["body/modules/AuthModule.html",[0,1.195,2,1.27,3,1.843,6,3.75,7,0.027,14,2.146,15,1.591,16,1.591,17,0.269,18,0.234,19,0.234,21,2.892,22,0.459,24,0.605,36,0.269,37,0.064,38,0.019,39,0.019,41,3.459,42,1.713,65,3.297,66,2.892,110,2.892,111,2.892,112,3.608,113,3.434,114,2.53,115,3.434,116,3.434,117,2.534,118,3.434,119,3.434]],["title/injectables/AuthService.html",[65,1.822,120,0.925]],["body/injectables/AuthService.html",[7,0.028,17,0.12,18,0.104,19,0.104,22,0.346,24,0.269,30,0.914,36,0.12,37,0.028,38,0.01,39,0.01,46,0.227,47,0.866,48,2.118,49,2.118,50,2.118,51,2.165,54,0.655,56,1.279,57,1.279,58,0.655,59,1.19,60,1.752,61,1.103,62,2.118,65,1.375,74,1.521,84,1.103,85,3.223,86,1.06,94,3.084,95,1.287,100,1.128,104,1.752,117,1.128,120,0.698,121,0.708,122,1.287,123,2.916,124,3.207,125,1.166,126,0.914,127,1.375,128,2.366,129,3.717,130,2.366,131,2.743,132,1.529,133,1.263,134,1.529,135,1.505,136,1.529,137,1.529,138,2.366,139,2.516,140,1.529,141,0.835,142,1.128,143,1.857,144,1.128,145,2.7,146,1.529,147,3.207,148,2.539,149,1.529,150,1.529,151,2.454,152,3.223,153,1.287,154,1.128,155,2.415,156,1.529,157,0.93,158,2.516,159,1.529,160,2.516,161,2.516,162,1.128,163,3.032,164,1.128,165,1.287,166,1.287,167,3.261,168,3.207,169,1.529,170,1.529,171,1.287,172,1.287,173,3.207,174,1.529,175,2.516,176,2.516,177,1.287,178,1.529,179,1.529,180,1.287,181,1.287,182,3.207,183,1.529,184,1.529,185,1.529,186,1.529,187,1.529,188,1.287,189,2.118,190,1.287,191,1.287,192,1.529,193,1.529,194,2.118,195,1.287]],["title/modules/BookmarkModule.html",[0,0.861,8,1.994]],["body/modules/BookmarkModule.html",[0,1.457,2,1.73,7,0.026,8,3.375,17,0.366,18,0.318,19,0.318,22,0.366,24,0.824,36,0.366,37,0.087,38,0.023,39,0.023,196,4.678]],["title/classes/EditUserDto.html",[37,0.062,197,1.994]],["body/classes/EditUserDto.html",[7,0.027,17,0.265,18,0.23,19,0.23,22,0.265,36,0.265,37,0.085,38,0.019,39,0.019,46,0.503,52,1.666,54,0.917,58,0.917,59,1.924,81,1.347,83,1.825,86,1.441,91,2.41,92,1.452,94,3.434,99,3.862,197,2.743,198,4.695,199,2.85,200,5.202,201,5.202,202,3.385,203,3.385,204,4.587,205,3.385,206,3.385,207,5.576]],["title/controllers/GameDataController.html",[40,1.233,208,2.201]],["body/controllers/GameDataController.html",[7,0.027,17,0.244,18,0.212,19,0.212,22,0.39,24,0.549,36,0.244,37,0.058,38,0.018,39,0.018,40,1.153,42,1.153,44,1.865,46,0.464,47,1.491,52,1.388,54,0.764,56,1.491,57,1.491,58,0.764,59,1.388,61,1.491,67,1.865,70,2.058,72,1.337,74,1.491,84,1.491,86,1.196,157,1.603,208,2.862,209,2.625,210,2.625,211,3.65,212,3.65,213,3.118,214,3.555,215,4.335,216,3.118,217,2.625,218,4.335,219,3.118,220,3.118,221,2.301,222,2.723,223,2.625,224,3.118,225,3.118,226,3.118,227,3.118,228,3.118,229,3.118]],["title/classes/GameDataDto.html",[37,0.062,214,2.201]],["body/classes/GameDataDto.html",[7,0.027,17,0.303,18,0.263,19,0.263,22,0.303,36,0.303,37,0.093,38,0.021,39,0.021,46,0.575,52,1.603,54,0.882,58,0.882,81,1.538,83,1.992,84,1.911,86,1.201,90,2.95,91,2.32,92,1.657,157,2.054,214,3.305,230,3.253,231,5.007,232,3.864,233,3.253,234,3.864]],["title/modules/GamedataModule.html",[0,0.861,9,1.994]],["body/modules/GamedataModule.html",[0,1.279,2,1.406,3,1.972,7,0.027,9,3.714,14,2.296,15,1.761,16,1.761,17,0.298,18,0.259,19,0.259,22,0.432,24,0.67,36,0.298,37,0.07,38,0.02,39,0.02,42,1.832,114,2.707,208,3.638,222,3.393,223,3.201,235,3.201,236,3.201,237,3.802,238,3.802]],["title/classes/GetReviews.html",[37,0.062,239,1.994]],["body/classes/GetReviews.html",[7,0.027,17,0.322,18,0.28,19,0.28,22,0.322,36,0.322,37,0.097,38,0.021,39,0.021,46,0.611,52,1.316,54,0.724,58,0.724,81,1.635,83,2.073,84,1.967,86,1.25,90,2.615,91,2.413,92,1.763,233,3.46,239,3.115,240,4.386,241,3.46,242,4.11]],["title/classes/GetVisitors.html",[37,0.062,243,1.994]],["body/classes/GetVisitors.html",[7,0.027,17,0.322,18,0.28,19,0.28,22,0.322,36,0.322,37,0.097,38,0.021,39,0.021,46,0.611,52,1.316,54,0.724,58,0.724,81,1.635,83,2.073,84,1.967,86,1.25,87,2.458,90,2.615,91,2.413,92,1.763,243,3.115,244,4.386,245,3.46,246,4.11]],["title/classes/JwtGuard.html",[37,0.062,247,2.201]],["body/classes/JwtGuard.html",[7,0.027,17,0.344,18,0.299,19,0.299,22,0.344,36,0.344,37,0.081,38,0.022,39,0.022,54,0.773,81,1.746,125,2.73,247,3.583,248,3.695,249,4.389,250,4.389,251,3.238,252,3.238,253,4.389,254,3.238]],["title/injectables/JwtStrategy.html",[112,1.994,120,0.925]],["body/injectables/JwtStrategy.html",[7,0.028,17,0.219,18,0.19,19,0.19,22,0.426,24,0.493,30,1.674,36,0.219,37,0.052,38,0.016,39,0.016,46,0.416,47,1.382,54,0.708,56,1.382,57,1.382,58,0.905,59,1.286,61,0.963,74,0.963,86,0.671,94,1.847,104,1.529,112,2.402,120,1.114,121,1.297,123,2.567,125,1.297,127,1.898,128,2.964,130,2.065,131,3.788,133,2.359,135,1.674,141,1.529,145,2.356,148,1.405,152,2.651,155,1.529,171,2.356,177,2.356,180,2.356,181,2.356,251,2.065,252,2.065,254,2.065,255,2.356,256,4.016,257,3.382,258,2.799,259,4.016,260,4.016,261,2.799,262,2.799,263,2.799,264,2.799,265,2.356,266,2.799,267,2.799,268,2.799,269,2.799,270,2.799,271,2.356,272,2.799,273,2.799]],["title/modules/PrismaModule.html",[0,0.861,10,1.994]],["body/modules/PrismaModule.html",[0,1.261,2,1.376,3,1.945,7,0.027,10,3.763,14,2.264,15,1.725,16,1.725,17,0.292,18,0.253,19,0.253,22,0.383,24,0.656,36,0.292,37,0.069,38,0.02,39,0.02,114,2.67,127,2.444,274,3.134,275,3.134,276,3.134,277,3.722,278,4.886,279,4.886,280,3.722]],["title/injectables/PrismaService.html",[120,0.925,127,1.233]],["body/injectables/PrismaService.html",[7,0.028,17,0.264,18,0.229,19,0.229,22,0.407,24,0.594,30,2.015,36,0.264,37,0.062,38,0.019,39,0.019,46,0.501,47,1.573,54,0.806,56,1.159,57,1.159,58,0.594,59,1.079,61,1.159,74,1.159,120,1.269,121,1.561,125,1.561,127,1.691,130,2.486,131,4.107,153,2.837,252,3.373,254,2.486,257,3.849,281,2.837,282,5.19,283,5.566,284,3.369,285,3.369,286,2.224,287,3.369,288,3.369,289,3.369,290,3.369,291,3.369,292,3.369]],["title/controllers/ReviewsController.html",[40,1.233,293,2.201]],["body/controllers/ReviewsController.html",[7,0.027,17,0.237,18,0.206,19,0.206,22,0.384,24,0.533,36,0.237,37,0.056,38,0.017,39,0.017,40,1.119,42,1.119,44,1.809,46,0.45,47,1.46,51,2.463,52,1.359,54,0.748,56,1.46,57,1.46,58,0.748,59,1.359,60,1.653,61,1.46,67,1.809,70,1.997,72,1.297,74,1.46,84,1.46,86,1.176,157,1.57,221,2.232,239,2.538,293,2.802,294,2.547,295,4.128,296,3.574,297,3.025,298,4.244,299,3.025,300,2.547,301,4.244,302,4.244,303,3.025,304,2.319,305,2.547,306,3.025,307,3.025,308,3.025,309,3.025,310,2.547,311,3.025,312,3.025,313,3.025,314,3.025]],["title/modules/ReviewsModule.html",[0,0.861,11,1.994]],["body/modules/ReviewsModule.html",[0,1.279,2,1.406,3,1.972,7,0.027,11,3.714,14,2.296,15,1.761,16,1.761,17,0.298,18,0.259,19,0.259,22,0.432,24,0.67,36,0.298,37,0.07,38,0.02,39,0.02,42,1.832,114,2.707,293,3.638,304,3.393,305,3.201,315,3.201,316,3.201,317,3.802,318,3.802]],["title/controllers/UserController.html",[40,1.233,319,2.201]],["body/controllers/UserController.html",[7,0.028,17,0.221,18,0.192,19,0.192,22,0.444,24,0.497,36,0.221,37,0.052,38,0.017,39,0.017,40,1.043,42,1.043,44,1.687,46,0.419,47,1.39,52,1.293,54,0.712,56,1.39,57,1.39,58,0.712,59,1.293,60,2.979,61,1.39,67,2.416,72,1.21,74,1.39,104,2.578,138,2.98,152,3.944,197,3.081,247,1.862,286,1.862,319,2.666,320,2.375,321,2.821,322,3.401,323,4.039,324,2.375,325,3.973,326,2.821,327,2.821,328,4.039,329,2.821,330,2.578,331,2.375,332,2.821,333,2.821,334,2.081,335,2.821,336,2.821,337,2.821,338,2.821,339,2.821,340,2.821]],["title/modules/UserModule.html",[0,0.861,12,1.994]],["body/modules/UserModule.html",[0,1.279,2,1.406,3,1.972,7,0.027,12,3.714,14,2.296,15,1.761,16,1.761,17,0.298,18,0.259,19,0.259,22,0.432,24,0.67,36,0.298,37,0.07,38,0.02,39,0.02,42,1.832,114,2.707,319,3.638,330,3.393,331,3.201,341,3.201,342,3.201,343,3.802,344,3.802]],["title/injectables/UserService.html",[120,0.925,330,1.822]],["body/injectables/UserService.html",[7,0.028,17,0.249,18,0.216,19,0.216,22,0.394,24,0.559,36,0.249,37,0.059,38,0.018,39,0.018,46,0.472,47,1.51,54,0.773,56,1.51,57,1.51,58,0.773,59,1.405,60,3.112,61,1.092,72,1.361,104,2.748,120,1.218,121,1.47,123,2.748,125,1.47,126,1.898,127,2.007,133,2.203,138,3.238,141,1.734,148,1.593,152,2.095,155,1.734,157,1.174,197,3.246,271,2.672,322,3.695,324,3.695,330,2.398,345,2.672,346,3.174,347,3.174,348,3.174]],["title/controllers/VisitorController.html",[40,1.233,349,2.201]],["body/controllers/VisitorController.html",[7,0.027,17,0.195,18,0.17,19,0.17,22,0.344,24,0.439,36,0.195,37,0.046,38,0.015,39,0.015,40,0.922,42,0.922,44,1.492,46,0.371,47,1.27,52,1.557,54,0.857,56,1.672,57,1.672,58,0.857,59,1.557,60,1.363,61,1.672,67,1.492,70,1.646,72,1.07,74,1.672,80,3.209,84,1.27,86,1.055,157,2.01,221,1.84,243,2.208,310,2.1,325,2.1,349,2.438,350,2.1,351,2.494,352,3.109,353,3.109,354,3.109,355,2.494,356,3.712,357,3.693,358,2.494,359,2.494,360,3.693,361,2.494,362,2.494,363,3.693,364,2.494,365,2.1,366,3.693,367,2.494,368,2.402,369,2.1,370,2.494,371,2.494,372,2.494,373,2.494,374,2.494,375,2.494,376,2.494,377,2.494,378,2.494,379,2.494,380,2.494,381,2.494]],["title/classes/VisitorData.html",[37,0.062,356,2.201]],["body/classes/VisitorData.html",[7,0.027,17,0.326,18,0.283,19,0.283,22,0.326,36,0.326,37,0.097,38,0.022,39,0.022,46,0.618,52,1.331,54,0.733,58,0.733,81,1.655,83,2.088,85,3.795,86,1.259,87,2.486,90,2.634,91,2.431,92,1.783,356,3.464,382,3.501,383,4.158]],["title/modules/VisitorcountModule.html",[0,0.861,13,1.994]],["body/modules/VisitorcountModule.html",[0,1.279,2,1.406,3,1.972,7,0.027,13,3.714,14,2.296,15,1.761,16,1.761,17,0.298,18,0.259,19,0.259,22,0.432,24,0.67,36,0.298,37,0.07,38,0.02,39,0.02,42,1.832,114,2.707,349,3.638,368,3.393,369,3.201,384,3.201,385,3.201,386,3.802,387,3.802]],["title/coverage.html",[388,3.35]],["body/coverage.html",[7,0.027,19,0.168,37,0.109,38,0.015,39,0.015,40,1.914,41,1.635,43,2.085,51,1.702,58,0.436,65,1.353,80,1.635,82,2.085,93,2.085,101,2.085,112,1.481,120,1.557,122,2.085,127,0.916,151,1.635,197,1.481,198,2.085,199,2.085,208,1.635,209,2.085,214,1.635,222,1.353,230,2.085,239,1.481,240,2.085,241,2.085,243,1.481,244,2.085,245,2.085,247,1.635,248,2.085,255,2.085,281,2.085,293,1.635,294,2.085,304,1.353,319,1.635,320,2.085,330,1.353,334,1.827,345,2.085,349,1.635,350,2.085,356,1.635,368,1.353,382,2.085,388,1.827,389,2.477,390,2.477,391,2.477,392,6.576,393,5.99,394,3.674,395,2.085,396,2.085,397,2.477,398,3.674,399,4.845,400,2.085,401,4.845,402,2.085,403,2.477,404,2.085,405,2.085,406,2.085,407,2.477,408,2.477,409,2.477]],["title/dependencies.html",[3,1.595,410,2.349]],["body/dependencies.html",[3,1.481,7,0.028,24,0.656,30,2.226,37,0.091,38,0.02,39,0.02,92,1.596,117,2.746,128,2.746,133,1.869,251,2.746,265,4.114,286,2.457,411,5.792,412,3.722,413,3.722,414,3.722,415,3.722,416,3.722,417,4.886,418,3.722,419,3.722,420,3.722,421,3.722,422,3.722,423,3.722,424,3.722,425,3.722,426,3.722,427,3.722,428,3.722,429,3.722,430,3.722,431,3.722,432,3.722]],["title/miscellaneous/functions.html",[433,1.842,434,3.374]],["body/miscellaneous/functions.html",[7,0.024,38,0.024,39,0.024,46,0.734,402,4.157,404,5.221,433,3.259,434,4.157,435,4.938]],["title/injectables/gamedataService.html",[120,0.925,222,1.822]],["body/injectables/gamedataService.html",[7,0.028,17,0.202,18,0.175,19,0.175,22,0.387,24,0.454,36,0.202,37,0.048,38,0.015,39,0.015,46,0.383,47,1.301,54,0.79,56,1.541,57,1.541,58,0.79,59,1.435,61,1.301,72,1.105,74,1.301,84,1.809,86,1.319,120,1.049,121,1.193,123,3.003,125,1.193,126,1.54,127,1.826,133,2.25,135,2.679,141,1.407,142,1.9,143,2.79,144,1.9,148,1.293,151,1.7,154,1.9,155,1.407,157,2.155,162,1.9,163,2.79,164,1.9,167,1.9,210,2.168,211,3.184,212,3.184,217,3.184,222,2.066,286,1.7,400,2.168,436,2.576,437,3.781,438,2.576,439,2.576,440,2.576,441,2.576,442,2.576,443,2.576]],["title/index.html",[46,0.415,444,2.79,445,2.79]],["body/index.html",[7,0.027,18,0.212,38,0.018,39,0.018,388,2.301,446,3.118,447,3.118,448,4.335,449,3.118,450,3.118,451,3.118,452,3.118,453,3.118,454,3.118,455,2.625,456,4.983,457,3.118,458,3.118,459,3.118,460,3.118,461,6.011,462,3.118,463,3.118,464,3.118,465,5.86,466,3.118,467,3.118,468,4.335,469,3.118,470,3.118,471,3.118,472,3.118,473,4.335,474,4.335,475,3.118,476,3.118,477,3.118,478,4.335,479,4.335,480,3.118,481,3.118,482,3.118,483,3.118,484,3.118,485,2.625,486,3.118,487,3.118,488,3.118,489,3.118,490,3.118,491,3.118,492,3.118,493,3.118,494,3.118,495,3.118,496,2.625,497,3.118,498,3.118,499,3.118,500,3.118,501,3.118,502,3.118,503,2.625]],["title/modules.html",[2,1.679]],["body/modules.html",[1,2.666,2,1.494,6,2.416,7,0.021,8,2.416,9,2.416,10,2.416,11,2.416,12,2.416,13,2.416,38,0.021,39,0.021,485,5.4,504,6.414,505,6.414,506,6.494,507,4.04,508,4.04]],["title/overview.html",[509,3.822]],["body/overview.html",[1,4.272,2,1.019,3,1.58,4,2.32,5,2.32,6,3.469,7,0.027,8,2.785,9,3.231,10,3.366,11,3.231,12,3.231,13,3.231,14,1.84,15,1.277,16,1.277,38,0.016,39,0.016,42,1.019,65,2.544,81,1.096,110,2.32,111,2.32,112,2.785,121,1.277,127,2.145,222,2.544,235,2.32,236,2.32,274,2.32,275,2.32,276,2.32,304,2.544,315,2.32,316,2.32,330,2.544,341,2.32,342,2.32,368,2.544,384,2.32,385,2.32,509,2.32,510,2.755,511,2.755,512,2.755,513,2.755]],["title/properties.html",[83,1.595,410,2.349]],["body/properties.html",[7,0.027,38,0.023,39,0.023,83,1.837,157,1.707,455,3.887,496,3.887,503,3.887,514,4.617,515,4.617,516,4.617,517,4.617,518,4.617,519,4.617,520,4.617,521,4.617,522,4.617]],["title/injectables/reviewsService.html",[120,0.925,304,1.822]],["body/injectables/reviewsService.html",[7,0.027,17,0.215,18,0.187,19,0.187,22,0.31,24,0.484,36,0.215,37,0.051,38,0.016,39,0.016,46,0.408,47,1.362,54,0.819,56,1.598,57,1.598,58,0.819,59,1.488,61,1.362,72,1.177,74,1.362,84,1.856,86,1.45,102,4.542,103,4.542,104,2.539,120,1.099,121,1.272,123,3.071,125,1.272,126,1.641,127,1.881,133,1.988,135,2.368,141,1.499,148,1.378,155,1.499,157,1.015,239,2.368,295,3.335,296,3.335,300,3.335,304,2.164,405,2.311,523,2.745,524,3.961,525,2.745,526,2.745,527,2.745,528,2.745,529,2.745]],["title/miscellaneous/variables.html",[433,1.842,530,3.374]],["body/miscellaneous/variables.html",[7,0.027,38,0.022,39,0.022,46,0.622,74,1.812,86,1.003,148,2.1,157,1.948,334,3.886,395,3.521,396,4.434,433,2.761,530,3.521,531,4.182,532,4.182,533,4.182,534,4.182,535,4.182,536,4.182,537,4.182,538,4.182,539,4.182,540,4.182,541,4.182]],["title/injectables/visitorCountService.html",[120,0.925,368,1.822]],["body/injectables/visitorCountService.html",[7,0.028,17,0.138,18,0.12,19,0.12,22,0.277,24,0.31,36,0.138,37,0.033,38,0.012,39,0.012,46,0.262,47,0.97,54,0.779,56,1.521,57,1.521,58,0.779,59,1.416,61,1.389,72,0.755,74,1.389,84,1.705,85,3.599,86,1.418,100,2.081,120,0.783,121,0.815,123,3.099,125,0.815,126,1.052,127,1.494,133,1.416,135,2.415,141,0.961,142,1.298,143,2.98,144,1.298,148,2.028,151,2.331,154,2.605,155,2.207,157,1.043,162,2.605,163,3.801,164,2.605,165,2.375,166,2.375,167,3.262,172,1.481,188,2.375,189,2.375,190,1.481,191,3.401,194,2.973,195,1.481,243,1.687,352,2.375,353,2.375,354,2.375,365,2.375,368,1.541,406,1.481,542,1.759,543,2.821,544,1.759,545,1.759,546,2.821,547,1.759,548,1.759,549,2.821,550,1.759,551,2.821,552,1.759,553,1.759,554,1.759,555,1.759,556,1.759]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"injectables/gamedataService.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"injectables/reviewsService.html":{},"miscellaneous/variables.html":{},"injectables/visitorCountService.html":{}}}],["0",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":515,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":100,"title":{"classes/AuthDto-1.html":{}},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["15m",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["2.0.0",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["3.12.0",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":511,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":512,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":510,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":513,"title":{},"body":{"overview.html":{}}}],["access_token",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["addtocount",{"_index":352,"title":{},"body":{"controllers/VisitorController.html":{},"injectables/visitorCountService.html":{}}}],["addtocount(@body",{"_index":378,"title":{},"body":{"controllers/VisitorController.html":{}}}],["addtocount(data",{"_index":355,"title":{},"body":{"controllers/VisitorController.html":{}}}],["addtocount(token",{"_index":543,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["already",{"_index":550,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["amazing",{"_index":486,"title":{},"body":{"index.html":{}}}],["api",{"_index":516,"title":{},"body":{"properties.html":{}}}],["app",{"_index":463,"title":{},"body":{"index.html":{}}}],["applications",{"_index":454,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["auth",{"_index":45,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorator",{"_index":335,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/guard/jwt.guard",{"_index":332,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":41,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdata",{"_index":80,"title":{"classes/AuthData.html":{}},"body":{"classes/AuthData.html":{},"controllers/VisitorController.html":{},"coverage.html":{}}}],["authdto",{"_index":51,"title":{"classes/AuthDto.html":{},"classes/AuthDto-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"injectables/AuthService.html":{},"controllers/ReviewsController.html":{},"coverage.html":{}}}],["authguard",{"_index":250,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authguard('jwt",{"_index":253,"title":{},"body":{"classes/JwtGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":496,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":65,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":508,"title":{},"body":{"modules.html":{}}}],["await",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["back",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["backers",{"_index":487,"title":{},"body":{"index.html":{}}}],["body",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameDataController.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"controllers/VisitorController.html":{}}}],["bookmark/bookmark.module",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["bookmarkmodule",{"_index":8,"title":{"modules/BookmarkModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookmarkModule.html":{},"modules.html":{},"overview.html":{}}}],["bootstrap",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":506,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":504,"title":{},"body":{"modules.html":{}}}],["building",{"_index":449,"title":{},"body":{"index.html":{}}}],["catch",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["class",{"_index":37,"title":{"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"classes/EditUserDto.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"classes/VisitorData.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"coverage.html":{},"dependencies.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["classes",{"_index":81,"title":{},"body":{"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"classes/EditUserDto.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"classes/VisitorData.html":{},"overview.html":{}}}],["cleandb",{"_index":283,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cli",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamedatamodule",{"_index":235,"title":{},"body":{"modules/GamedataModule.html":{},"overview.html":{}}}],["cluster_gamedatamodule_providers",{"_index":236,"title":{},"body":{"modules/GamedataModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":274,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":275,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":276,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule",{"_index":315,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_providers",{"_index":316,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":341,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":342,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_visitorcountmodule",{"_index":384,"title":{},"body":{"modules/VisitorcountModule.html":{},"overview.html":{}}}],["cluster_visitorcountmodule_providers",{"_index":385,"title":{},"body":{"modules/VisitorcountModule.html":{},"overview.html":{}}}],["compare",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["config",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["config.get('database_url",{"_index":289,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["console.log('mik",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(data",{"_index":374,"title":{},"body":{"controllers/VisitorController.html":{}}}],["const",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"miscellaneous/variables.html":{},"injectables/visitorCountService.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["constructor(config",{"_index":257,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(prisma",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["constructor(private",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameDataController.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["controller",{"_index":40,"title":{"controllers/AuthController.html":{},"controllers/GameDataController.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"controllers/VisitorController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/GameDataController.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"controllers/VisitorController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('gamedata",{"_index":224,"title":{},"body":{"controllers/GameDataController.html":{}}}],["controller('review",{"_index":306,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('users",{"_index":337,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('visitorcount",{"_index":370,"title":{},"body":{"controllers/VisitorController.html":{}}}],["controllers",{"_index":42,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameDataController.html":{},"modules/GamedataModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/VisitorController.html":{},"modules/VisitorcountModule.html":{},"overview.html":{}}}],["count",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["coverage",{"_index":388,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createcount",{"_index":353,"title":{},"body":{"controllers/VisitorController.html":{},"injectables/visitorCountService.html":{}}}],["createcount(@body",{"_index":373,"title":{},"body":{"controllers/VisitorController.html":{}}}],["createcount(data",{"_index":359,"title":{},"body":{"controllers/VisitorController.html":{}}}],["createcount(token",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["createdata",{"_index":211,"title":{},"body":{"controllers/GameDataController.html":{},"injectables/gamedataService.html":{}}}],["createdata(@body",{"_index":225,"title":{},"body":{"controllers/GameDataController.html":{}}}],["createdata(data",{"_index":213,"title":{},"body":{"controllers/GameDataController.html":{}}}],["createdata(title",{"_index":437,"title":{},"body":{"injectables/gamedataService.html":{}}}],["createparamdecorator",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreview",{"_index":296,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/reviewsService.html":{}}}],["createreview(@body",{"_index":308,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreview(data",{"_index":297,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreview(title",{"_index":524,"title":{},"body":{"injectables/reviewsService.html":{}}}],["ctx",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"controllers/ReviewsController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"properties.html":{},"injectables/reviewsService.html":{},"miscellaneous/variables.html":{},"injectables/visitorCountService.html":{}}}],["data.data",{"_index":227,"title":{},"body":{"controllers/GameDataController.html":{}}}],["data.pointreview",{"_index":311,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["data.textreview",{"_index":312,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["data.title",{"_index":310,"title":{},"body":{"controllers/ReviewsController.html":{},"controllers/VisitorController.html":{}}}],["database",{"_index":551,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["datasources",{"_index":287,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["decorators",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{}}}],["default",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["delete",{"_index":273,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamedataModule.html":{},"modules/PrismaModule.html":{},"modules/ReviewsModule.html":{},"modules/UserModule.html":{},"modules/VisitorcountModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":455,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":464,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{}}}],["dto.email",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.password",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/gamedata.dto",{"_index":220,"title":{},"body":{"controllers/GameDataController.html":{}}}],["e",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["e.code",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["e2e",{"_index":475,"title":{},"body":{"index.html":{}}}],["edituser",{"_index":322,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituser(@getuser('id",{"_index":339,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(userid",{"_index":324,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["edituserdto",{"_index":197,"title":{"classes/EditUserDto.html":{}},"body":{"classes/EditUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["efficient",{"_index":450,"title":{},"body":{"index.html":{}}}],["email",{"_index":94,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"injectables/JwtStrategy.html":{}}}],["executioncontext",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["expiresin",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["exports",{"_index":278,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":252,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":263,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":268,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"coverage.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["find",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstname",{"_index":200,"title":{},"body":{"classes/EditUserDto.html":{}}}],["forbiddenexception",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["forbiddenexception('credentials",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":442,"title":{},"body":{"injectables/gamedataService.html":{}}}],["forbiddenexception('no",{"_index":555,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["forbiddenexception('token",{"_index":549,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["framework",{"_index":448,"title":{},"body":{"index.html":{}}}],["function",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":434,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":517,"title":{},"body":{"properties.html":{}}}],["gamedata",{"_index":210,"title":{},"body":{"controllers/GameDataController.html":{},"injectables/gamedataService.html":{}}}],["gamedata.controller",{"_index":238,"title":{},"body":{"modules/GamedataModule.html":{}}}],["gamedata.service",{"_index":223,"title":{},"body":{"controllers/GameDataController.html":{},"modules/GamedataModule.html":{}}}],["gamedata/gamedata.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["gamedatacontroller",{"_index":208,"title":{"controllers/GameDataController.html":{}},"body":{"controllers/GameDataController.html":{},"modules/GamedataModule.html":{},"coverage.html":{}}}],["gamedatadto",{"_index":214,"title":{"classes/GameDataDto.html":{}},"body":{"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"coverage.html":{}}}],["gamedatamodule",{"_index":9,"title":{"modules/GamedataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GamedataModule.html":{},"modules.html":{},"overview.html":{}}}],["gamedataservice",{"_index":222,"title":{"injectables/gamedataService.html":{}},"body":{"controllers/GameDataController.html":{},"modules/GamedataModule.html":{},"coverage.html":{},"injectables/gamedataService.html":{},"overview.html":{}}}],["generate",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('get",{"_index":301,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["get('getdata/:title",{"_index":218,"title":{},"body":{"controllers/GameDataController.html":{}}}],["get('getvisitors/:title",{"_index":366,"title":{},"body":{"controllers/VisitorController.html":{}}}],["get('me",{"_index":328,"title":{},"body":{"controllers/UserController.html":{}}}],["get('visitor",{"_index":363,"title":{},"body":{"controllers/VisitorController.html":{}}}],["getcount",{"_index":354,"title":{},"body":{"controllers/VisitorController.html":{},"injectables/visitorCountService.html":{}}}],["getcount(@body",{"_index":371,"title":{},"body":{"controllers/VisitorController.html":{}}}],["getcount(data",{"_index":362,"title":{},"body":{"controllers/VisitorController.html":{}}}],["getcount(token",{"_index":546,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["getdata",{"_index":212,"title":{},"body":{"controllers/GameDataController.html":{},"injectables/gamedataService.html":{}}}],["getdata(@param('title",{"_index":228,"title":{},"body":{"controllers/GameDataController.html":{}}}],["getdata(title",{"_index":217,"title":{},"body":{"controllers/GameDataController.html":{},"injectables/gamedataService.html":{}}}],["getme",{"_index":323,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(@getuser",{"_index":338,"title":{},"body":{"controllers/UserController.html":{}}}],["getme(user",{"_index":327,"title":{},"body":{"controllers/UserController.html":{}}}],["getreviews",{"_index":239,"title":{"classes/GetReviews.html":{}},"body":{"classes/GetReviews.html":{},"controllers/ReviewsController.html":{},"coverage.html":{},"injectables/reviewsService.html":{}}}],["getreviews(@param('title",{"_index":313,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["getreviews(title",{"_index":300,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/reviewsService.html":{}}}],["getting",{"_index":444,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":334,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getvisitor(token",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["getvisitors",{"_index":243,"title":{"classes/GetVisitors.html":{}},"body":{"classes/GetVisitors.html":{},"controllers/VisitorController.html":{},"coverage.html":{},"injectables/visitorCountService.html":{}}}],["getvisitors(@param('title",{"_index":380,"title":{},"body":{"controllers/VisitorController.html":{}}}],["getvisitors(title",{"_index":365,"title":{},"body":{"controllers/VisitorController.html":{},"injectables/visitorCountService.html":{}}}],["global",{"_index":279,"title":{},"body":{"modules/PrismaModule.html":{}}}],["graph",{"_index":507,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":482,"title":{},"body":{"index.html":{}}}],["hash",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":493,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('signin",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":500,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":271,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["incorrect",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":46,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"miscellaneous/functions.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"miscellaneous/variables.html":{},"injectables/visitorCountService.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["injectable",{"_index":120,"title":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["injectables",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"injectables/gamedataService.html":{},"overview.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["installation",{"_index":460,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":462,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["isemail",{"_index":99,"title":{},"body":{"classes/AuthDto.html":{},"classes/EditUserDto.html":{}}}],["isemail()@isnotempty",{"_index":96,"title":{},"body":{"classes/AuthDto.html":{}}}],["isemail()@isoptional",{"_index":202,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isglobal",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":90,"title":{},"body":{"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/VisitorData.html":{}}}],["isnotempty()@isstring",{"_index":233,"title":{},"body":{"classes/GameDataDto.html":{},"classes/GetReviews.html":{}}}],["isnumber",{"_index":109,"title":{},"body":{"classes/AuthDto-1.html":{}}}],["isnumber()@isnotempty",{"_index":105,"title":{},"body":{"classes/AuthDto-1.html":{}}}],["isoptional",{"_index":207,"title":{},"body":{"classes/EditUserDto.html":{}}}],["isstring",{"_index":91,"title":{},"body":{"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"classes/EditUserDto.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/VisitorData.html":{}}}],["isstring()@isnotempty",{"_index":87,"title":{},"body":{"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"classes/GetVisitors.html":{},"classes/VisitorData.html":{}}}],["isstring()@isoptional",{"_index":204,"title":{},"body":{"classes/EditUserDto.html":{}}}],["join",{"_index":489,"title":{},"body":{"index.html":{}}}],["json",{"_index":231,"title":{},"body":{"classes/GameDataDto.html":{}}}],["juho",{"_index":521,"title":{},"body":{"properties.html":{}}}],["jwt",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":247,"title":{"classes/JwtGuard.html":{}},"body":{"classes/JwtGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":112,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":497,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":201,"title":{},"body":{"classes/EditUserDto.html":{}}}],["license",{"_index":503,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":479,"title":{},"body":{"index.html":{}}}],["literal",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["matching",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"injectables/gamedataService.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"injectables/reviewsService.html":{},"miscellaneous/variables.html":{},"injectables/visitorCountService.html":{}}}],["metadata",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameDataController.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["mik",{"_index":375,"title":{},"body":{"controllers/VisitorController.html":{}}}],["miscellaneous",{"_index":433,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":478,"title":{},"body":{"index.html":{}}}],["mode",{"_index":468,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookmarkModule.html":{},"modules/GamedataModule.html":{},"modules/PrismaModule.html":{},"modules/ReviewsModule.html":{},"modules/UserModule.html":{},"modules/VisitorcountModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookmarkModule.html":{},"modules/GamedataModule.html":{},"modules/PrismaModule.html":{},"modules/ReviewsModule.html":{},"modules/UserModule.html":{},"modules/VisitorcountModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BookmarkModule.html":{},"modules/GamedataModule.html":{},"modules/PrismaModule.html":{},"modules/ReviewsModule.html":{},"modules/UserModule.html":{},"modules/VisitorcountModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":492,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":498,"title":{},"body":{"index.html":{}}}],["name",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameDataController.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["nest",{"_index":456,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":502,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"controllers/GameDataController.html":{},"modules/GamedataModule.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"modules/VisitorcountModule.html":{},"dependencies.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["nestjs/config",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":251,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["node.js",{"_index":447,"title":{},"body":{"index.html":{}}}],["npm",{"_index":461,"title":{},"body":{"index.html":{}}}],["number",{"_index":104,"title":{},"body":{"classes/AuthDto-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/reviewsService.html":{}}}],["open",{"_index":480,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamedataModule.html":{},"modules/PrismaModule.html":{},"modules/ReviewsModule.html":{},"modules/UserModule.html":{},"modules/VisitorcountModule.html":{},"overview.html":{}}}],["overview",{"_index":509,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["package",{"_index":410,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":221,"title":{},"body":{"controllers/GameDataController.html":{},"controllers/ReviewsController.html":{},"controllers/VisitorController.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameDataController.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["pass",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":266,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":95,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{}}}],["patch",{"_index":325,"title":{},"body":{"controllers/UserController.html":{},"controllers/VisitorController.html":{}}}],["patch('add",{"_index":357,"title":{},"body":{"controllers/VisitorController.html":{}}}],["payload",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":272,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":490,"title":{},"body":{"index.html":{}}}],["pointreview",{"_index":102,"title":{},"body":{"classes/AuthDto-1.html":{},"injectables/reviewsService.html":{}}}],["post",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameDataController.html":{},"controllers/ReviewsController.html":{},"controllers/VisitorController.html":{}}}],["post('createcount",{"_index":360,"title":{},"body":{"controllers/VisitorController.html":{}}}],["post('createdata",{"_index":215,"title":{},"body":{"controllers/GameDataController.html":{}}}],["post('post",{"_index":298,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["post('signin",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":44,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameDataController.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"controllers/VisitorController.html":{}}}],["prisma",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"dependencies.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["prisma.jsonobject",{"_index":441,"title":{},"body":{"injectables/gamedataService.html":{}}}],["prisma.service",{"_index":280,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":286,"title":{},"body":{"injectables/PrismaService.html":{},"controllers/UserController.html":{},"dependencies.html":{},"injectables/gamedataService.html":{}}}],["prisma/client/runtime",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["prisma/prisma.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["prismaclient",{"_index":282,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["prismamodule",{"_index":10,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":127,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/gamedataService.html":{},"overview.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["private",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":470,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":446,"title":{},"body":{"index.html":{}}}],["project",{"_index":481,"title":{},"body":{"index.html":{}}}],["promise",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":83,"title":{"properties.html":{}},"body":{"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"classes/EditUserDto.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/VisitorData.html":{},"properties.html":{}}}],["providers",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"modules/GamedataModule.html":{},"modules/PrismaModule.html":{},"modules/ReviewsModule.html":{},"modules/UserModule.html":{},"modules/VisitorcountModule.html":{}}}],["puurunen",{"_index":522,"title":{},"body":{"properties.html":{}}}],["pwmatches",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["read",{"_index":491,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":459,"title":{},"body":{"index.html":{}}}],["request",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user[data",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamedataModule.html":{},"modules/PrismaModule.html":{},"modules/ReviewsModule.html":{},"modules/UserModule.html":{},"modules/VisitorcountModule.html":{},"overview.html":{}}}],["results",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"injectables/gamedataService.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"injectables/reviewsService.html":{},"miscellaneous/variables.html":{},"injectables/visitorCountService.html":{}}}],["return",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameDataController.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"miscellaneous/variables.html":{},"injectables/visitorCountService.html":{}}}],["returns",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameDataController.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["review",{"_index":295,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/reviewsService.html":{}}}],["reviews.controller",{"_index":318,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.dto.ts",{"_index":241,"title":{},"body":{"classes/GetReviews.html":{},"coverage.html":{}}}],["reviews.dto.ts:5",{"_index":242,"title":{},"body":{"classes/GetReviews.html":{}}}],["reviews.service",{"_index":305,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviews/:title",{"_index":302,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["reviews/reviews.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":293,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewservice",{"_index":307,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["reviewsmodule",{"_index":11,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsservice",{"_index":304,"title":{"injectables/reviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{},"overview.html":{},"injectables/reviewsService.html":{}}}],["rimraf",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":465,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["saved",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":451,"title":{},"body":{"index.html":{}}}],["secret",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["send",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":452,"title":{},"body":{"index.html":{}}}],["shop",{"_index":519,"title":{},"body":{"properties.html":{}}}],["side",{"_index":453,"title":{},"body":{"index.html":{}}}],["signin",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(dto",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signtoken",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(userid",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(dto",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BookmarkModule.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"modules/GamedataModule.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"modules/VisitorcountModule.html":{},"injectables/gamedataService.html":{},"index.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["sponsors",{"_index":484,"title":{},"body":{"index.html":{}}}],["src/.../get",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":43,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:10",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:54",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/get",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":93,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":98,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":97,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/guard/jwt.guard.ts",{"_index":248,"title":{},"body":{"classes/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guard/jwt.guard.ts:2",{"_index":249,"title":{},"body":{"classes/JwtGuard.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:15",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:8",{"_index":258,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/bookmark/bookmark.module.ts",{"_index":196,"title":{},"body":{"modules/BookmarkModule.html":{}}}],["src/gamedata/dto/gamedata.dto.ts",{"_index":230,"title":{},"body":{"classes/GameDataDto.html":{},"coverage.html":{}}}],["src/gamedata/dto/gamedata.dto.ts:6",{"_index":234,"title":{},"body":{"classes/GameDataDto.html":{}}}],["src/gamedata/dto/gamedata.dto.ts:9",{"_index":232,"title":{},"body":{"classes/GameDataDto.html":{}}}],["src/gamedata/gamedata.controller.ts",{"_index":209,"title":{},"body":{"controllers/GameDataController.html":{},"coverage.html":{}}}],["src/gamedata/gamedata.controller.ts:10",{"_index":216,"title":{},"body":{"controllers/GameDataController.html":{}}}],["src/gamedata/gamedata.controller.ts:15",{"_index":219,"title":{},"body":{"controllers/GameDataController.html":{}}}],["src/gamedata/gamedata.module.ts",{"_index":237,"title":{},"body":{"modules/GamedataModule.html":{}}}],["src/gamedata/gamedata.service.ts",{"_index":400,"title":{},"body":{"coverage.html":{},"injectables/gamedataService.html":{}}}],["src/gamedata/gamedata.service.ts:10",{"_index":438,"title":{},"body":{"injectables/gamedataService.html":{}}}],["src/gamedata/gamedata.service.ts:26",{"_index":439,"title":{},"body":{"injectables/gamedataService.html":{}}}],["src/gamedata/gamedata.service.ts:7",{"_index":436,"title":{},"body":{"injectables/gamedataService.html":{}}}],["src/main.ts",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":277,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":281,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:17",{"_index":285,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":284,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/reviews/dto/get",{"_index":240,"title":{},"body":{"classes/GetReviews.html":{},"coverage.html":{}}}],["src/reviews/dto/review.dto.ts",{"_index":101,"title":{},"body":{"classes/AuthDto-1.html":{},"coverage.html":{}}}],["src/reviews/dto/review.dto.ts:13",{"_index":106,"title":{},"body":{"classes/AuthDto-1.html":{}}}],["src/reviews/dto/review.dto.ts:6",{"_index":108,"title":{},"body":{"classes/AuthDto-1.html":{}}}],["src/reviews/dto/review.dto.ts:9",{"_index":107,"title":{},"body":{"classes/AuthDto-1.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":294,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/reviews/reviews.controller.ts:10",{"_index":299,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:19",{"_index":303,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.module.ts",{"_index":317,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/reviews/reviews.service.ts",{"_index":405,"title":{},"body":{"coverage.html":{},"injectables/reviewsService.html":{}}}],["src/reviews/reviews.service.ts:19",{"_index":527,"title":{},"body":{"injectables/reviewsService.html":{}}}],["src/reviews/reviews.service.ts:5",{"_index":523,"title":{},"body":{"injectables/reviewsService.html":{}}}],["src/reviews/reviews.service.ts:8",{"_index":525,"title":{},"body":{"injectables/reviewsService.html":{}}}],["src/user/dto/edit",{"_index":198,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":320,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:13",{"_index":329,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:18",{"_index":326,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":343,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":345,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:6",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["src/visitorcount/dto/auth.data.ts",{"_index":82,"title":{},"body":{"classes/AuthData.html":{},"coverage.html":{}}}],["src/visitorcount/dto/auth.data.ts:10",{"_index":88,"title":{},"body":{"classes/AuthData.html":{}}}],["src/visitorcount/dto/auth.data.ts:6",{"_index":89,"title":{},"body":{"classes/AuthData.html":{}}}],["src/visitorcount/dto/get",{"_index":244,"title":{},"body":{"classes/GetVisitors.html":{},"coverage.html":{}}}],["src/visitorcount/dto/visitorcount.data.ts",{"_index":382,"title":{},"body":{"classes/VisitorData.html":{},"coverage.html":{}}}],["src/visitorcount/dto/visitorcount.data.ts:6",{"_index":383,"title":{},"body":{"classes/VisitorData.html":{}}}],["src/visitorcount/visitorcount.controller.ts",{"_index":350,"title":{},"body":{"controllers/VisitorController.html":{},"coverage.html":{}}}],["src/visitorcount/visitorcount.controller.ts:14",{"_index":361,"title":{},"body":{"controllers/VisitorController.html":{}}}],["src/visitorcount/visitorcount.controller.ts:20",{"_index":358,"title":{},"body":{"controllers/VisitorController.html":{}}}],["src/visitorcount/visitorcount.controller.ts:25",{"_index":367,"title":{},"body":{"controllers/VisitorController.html":{}}}],["src/visitorcount/visitorcount.controller.ts:9",{"_index":364,"title":{},"body":{"controllers/VisitorController.html":{}}}],["src/visitorcount/visitorcount.module.ts",{"_index":386,"title":{},"body":{"modules/VisitorcountModule.html":{}}}],["src/visitorcount/visitorcount.service.ts",{"_index":406,"title":{},"body":{"coverage.html":{},"injectables/visitorCountService.html":{}}}],["src/visitorcount/visitorcount.service.ts:29",{"_index":547,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["src/visitorcount/visitorcount.service.ts:47",{"_index":544,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["src/visitorcount/visitorcount.service.ts:6",{"_index":542,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["src/visitorcount/visitorcount.service.ts:66",{"_index":548,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["src/visitorcount/visitorcount.service.ts:9",{"_index":545,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["start",{"_index":466,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":469,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":471,"title":{},"body":{"index.html":{}}}],["started",{"_index":445,"title":{"index.html":{}},"body":{}}],["starter",{"_index":458,"title":{},"body":{"index.html":{}}}],["statements",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":494,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":86,"title":{},"body":{"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"injectables/JwtStrategy.html":{},"controllers/ReviewsController.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"miscellaneous/variables.html":{},"injectables/visitorCountService.html":{}}}],["sub",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["super",{"_index":254,"title":{},"body":{"classes/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["support",{"_index":485,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":505,"title":{},"body":{"modules.html":{}}}],["table",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["test",{"_index":474,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":477,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":476,"title":{},"body":{"index.html":{}}}],["tests",{"_index":473,"title":{},"body":{"index.html":{}}}],["textreview",{"_index":103,"title":{},"body":{"classes/AuthDto-1.html":{},"injectables/reviewsService.html":{}}}],["thanks",{"_index":483,"title":{},"body":{"index.html":{}}}],["this.$transaction",{"_index":290,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.signin(dto",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bookmark.deletemany",{"_index":291,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.config.get('jwt_secret",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gamedataservice.createdata(data.title",{"_index":226,"title":{},"body":{"controllers/GameDataController.html":{}}}],["this.gamedataservice.getdata(title",{"_index":229,"title":{},"body":{"controllers/GameDataController.html":{}}}],["this.getcount(token",{"_index":552,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["this.jwt.signasync(payload",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.gamedata.create",{"_index":440,"title":{},"body":{"injectables/gamedataService.html":{}}}],["this.prisma.gamedata.findmany",{"_index":443,"title":{},"body":{"injectables/gamedataService.html":{}}}],["this.prisma.reviews.create",{"_index":528,"title":{},"body":{"injectables/reviewsService.html":{}}}],["this.prisma.reviews.findmany",{"_index":529,"title":{},"body":{"injectables/reviewsService.html":{}}}],["this.prisma.user.create",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.findunique",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.prisma.user.update",{"_index":348,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.visitorcount.create",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["this.prisma.visitorcount.findmany",{"_index":556,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["this.prisma.visitorcount.findunique",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["this.prisma.visitorcount.update",{"_index":553,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["this.reviewservice.createreview",{"_index":309,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.getreviews(title",{"_index":314,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.signtoken(user.id",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.deletemany",{"_index":292,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.userservice.edituser(userid",{"_index":340,"title":{},"body":{"controllers/UserController.html":{}}}],["this.visitorcountservice.addtocount(data.token",{"_index":379,"title":{},"body":{"controllers/VisitorController.html":{}}}],["this.visitorcountservice.createcount(data.token",{"_index":377,"title":{},"body":{"controllers/VisitorController.html":{}}}],["this.visitorcountservice.getcount(data.token",{"_index":372,"title":{},"body":{"controllers/VisitorController.html":{}}}],["this.visitorcountservice.getvisitors(title",{"_index":381,"title":{},"body":{"controllers/VisitorController.html":{}}}],["throw",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["title",{"_index":84,"title":{},"body":{"classes/AuthData.html":{},"classes/AuthDto-1.html":{},"injectables/AuthService.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"controllers/ReviewsController.html":{},"controllers/VisitorController.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["token",{"_index":85,"title":{},"body":{"classes/AuthData.html":{},"injectables/AuthService.html":{},"classes/VisitorData.html":{},"injectables/visitorCountService.html":{}}}],["touch",{"_index":495,"title":{},"body":{"index.html":{}}}],["touchell",{"_index":518,"title":{},"body":{"properties.html":{}}}],["transformer",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["try",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/gamedataService.html":{},"injectables/visitorCountService.html":{}}}],["twitter",{"_index":501,"title":{},"body":{"index.html":{}}}],["type",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"injectables/AuthService.html":{},"classes/EditUserDto.html":{},"controllers/GameDataController.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ReviewsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"coverage.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["typescript",{"_index":457,"title":{},"body":{"index.html":{}}}],["täm",{"_index":376,"title":{},"body":{"controllers/VisitorController.html":{}}}],["undefined",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":472,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/gamedataService.html":{},"injectables/reviewsService.html":{},"injectables/visitorCountService.html":{}}}],["unlicensed",{"_index":520,"title":{},"body":{"properties.html":{}}}],["url",{"_index":288,"title":{},"body":{"injectables/PrismaService.html":{}}}],["useguards",{"_index":333,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":336,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":344,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto.ts",{"_index":199,"title":{},"body":{"classes/EditUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":205,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:14",{"_index":206,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.dto.ts:6",{"_index":203,"title":{},"body":{"classes/EditUserDto.html":{}}}],["user.email",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.hash",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user.service",{"_index":331,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":319,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":12,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":321,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":330,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":92,"title":{},"body":{"classes/AuthData.html":{},"classes/AuthDto.html":{},"classes/AuthDto-1.html":{},"classes/EditUserDto.html":{},"classes/GameDataDto.html":{},"classes/GetReviews.html":{},"classes/GetVisitors.html":{},"classes/VisitorData.html":{},"dependencies.html":{}}}],["value",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":530,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":514,"title":{},"body":{"properties.html":{}}}],["visitcount",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["visitor",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/visitorCountService.html":{}}}],["visitor.count",{"_index":554,"title":{},"body":{"injectables/visitorCountService.html":{}}}],["visitor.dto.ts",{"_index":245,"title":{},"body":{"classes/GetVisitors.html":{},"coverage.html":{}}}],["visitor.dto.ts:6",{"_index":246,"title":{},"body":{"classes/GetVisitors.html":{}}}],["visitorcontroller",{"_index":349,"title":{"controllers/VisitorController.html":{}},"body":{"controllers/VisitorController.html":{},"modules/VisitorcountModule.html":{},"coverage.html":{}}}],["visitorcount",{"_index":351,"title":{},"body":{"controllers/VisitorController.html":{}}}],["visitorcount.controller",{"_index":387,"title":{},"body":{"modules/VisitorcountModule.html":{}}}],["visitorcount.service",{"_index":369,"title":{},"body":{"controllers/VisitorController.html":{},"modules/VisitorcountModule.html":{}}}],["visitorcount/visitorcount.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["visitorcountmodule",{"_index":13,"title":{"modules/VisitorcountModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VisitorcountModule.html":{},"modules.html":{},"overview.html":{}}}],["visitorcountservice",{"_index":368,"title":{"injectables/visitorCountService.html":{}},"body":{"controllers/VisitorController.html":{},"modules/VisitorcountModule.html":{},"coverage.html":{},"overview.html":{},"injectables/visitorCountService.html":{}}}],["visitordata",{"_index":356,"title":{"classes/VisitorData.html":{}},"body":{"controllers/VisitorController.html":{},"classes/VisitorData.html":{},"coverage.html":{}}}],["watch",{"_index":467,"title":{},"body":{"index.html":{}}}],["website",{"_index":499,"title":{},"body":{"index.html":{}}}],["yes",{"_index":526,"title":{},"body":{"injectables/reviewsService.html":{}}}],["you'd",{"_index":488,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GamedataModule.html":{},"modules/PrismaModule.html":{},"modules/ReviewsModule.html":{},"modules/UserModule.html":{},"modules/VisitorcountModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookmarkModule\n\nBookmarkModule\n\nAppModule -->\n\nBookmarkModule->AppModule\n\n\n\n\n\nGamedataModule\n\nGamedataModule\n\nAppModule -->\n\nGamedataModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nVisitorcountModule\n\nVisitorcountModule\n\nAppModule -->\n\nVisitorcountModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BookmarkModule\n                        \n                        \n                            GamedataModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            VisitorcountModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthModule } from './auth/auth.module';\nimport { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\nimport { BookmarkModule } from './bookmark/bookmark.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { VisitorcountModule } from './visitorcount/visitorcount.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { ReviewsModule } from './reviews/reviews.module';\nimport { GamedataModule } from './gamedata/gamedata.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    AuthModule,\n    UserModule,\n    BookmarkModule,\n    PrismaModule,\n    VisitorcountModule,\n    ReviewsModule,\n    GamedataModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signin\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signin\n                        \n                    \n                \n            \n            \n                \nsignin(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthService } from './auth.service';\nimport { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { AuthDto } from './dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('signup')\n  signup(@Body() dto: AuthDto) {\n    return this.authService.signup(dto);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  signin(@Body() dto: AuthDto) {\n    return this.authService.signin(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthData.html":{"url":"classes/AuthData.html","title":"class - AuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitorcount/dto/auth.data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/visitorcount/dto/auth.data.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/visitorcount/dto/auth.data.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class AuthData {\n  @IsString()\n  @IsNotEmpty()\n  token: string;\n\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class AuthDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto-1.html":{"url":"classes/AuthDto-1.html","title":"class - AuthDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dto/review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pointReview\n                            \n                            \n                                textReview\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pointReview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dto/review.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textReview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dto/review.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dto/review.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class AuthDto {\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  @IsString()\n  textReview: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  pointReview: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { JwtStrategy } from './strategy/jwt.strategy';\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [JwtModule.register({})],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signin\n                            \n                            \n                                    Async\n                                signToken\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                    \n                    signin(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signToken(userId: number, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { AuthDto } from './dto';\nimport { PrismaService } from './../prisma/prisma.service';\nimport { ForbiddenException, Injectable } from '@nestjs/common';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwt: JwtService,\n    private config: ConfigService,\n  ) {}\n  async signup(dto: AuthDto) {\n    //generate the password hash\n    const hash = dto.password;\n    //save the new user in the db\n    try {\n      const user = await this.prisma.user.create({\n        data: {\n          email: dto.email,\n          hash,\n        },\n      });\n      //return the saved user\n      return this.signToken(user.id, user.email);\n    } catch (e) {\n      if (e instanceof PrismaClientKnownRequestError) {\n        if (e.code === 'P2002') {\n          throw new ForbiddenException('Credentials taken');\n        }\n      }\n      throw e;\n    }\n  }\n\n  async signin(dto: AuthDto) {\n    // find the user by email\n    const user = await this.prisma.user.findUnique({\n      where: {\n        email: dto.email,\n      },\n    });\n    // if no user exists throw e\n    if (!user) throw new ForbiddenException('Credentials incorrect');\n    // compare pass\n    const pwMatches = await user.hash;\n    // if pass incorrect throw e\n    if (!pwMatches) throw new ForbiddenException('Credentials incorrect');\n    // send back user\n    return this.signToken(user.id, user.email);\n  }\n  async signToken(\n    userId: number,\n    email: string,\n  ): Promise {\n    const payload = {\n      sub: userId,\n      email,\n    };\n    const secret = this.config.get('JWT_SECRET');\n\n    const token = await this.jwt.signAsync(payload, {\n      expiresIn: '15m',\n      secret: secret,\n    });\n    return {\n      access_token: token,\n    };\n  }\n\n  /*async createcount(token: string, title: string) {\n    const visitcount = await this.prisma.visitorCount.create({\n      data: {\n        token: token,\n        title: title,\n        count: 1,\n      },\n    });\n\n    return visitcount;\n  }\n\n  async getVisitor(token: string) {\n    console.log('mikä token', token);\n    const visitor = await this.prisma.visitorCount.findUnique({\n      where: {\n        token: token,\n      },\n    });\n\n    return visitor;\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookmarkModule.html":{"url":"modules/BookmarkModule.html","title":"module - BookmarkModule","body":"\n                   \n\n\n\n\n    Modules\n    BookmarkModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bookmark/bookmark.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class BookmarkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserDto.html":{"url":"classes/EditUserDto.html","title":"class - EditUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/edit-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/edit-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator';\n\nexport class EditUserDto {\n  @IsEmail()\n  @IsOptional()\n  email?: string;\n\n  @IsString()\n  @IsOptional()\n  firstName?: string;\n\n  @IsString()\n  @IsOptional()\n  lastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameDataController.html":{"url":"controllers/GameDataController.html","title":"controller - GameDataController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameDataController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gamedata/gamedata.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gamedata\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createdata\n                            \n                            \n                                getdata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createdata\n                        \n                    \n                \n            \n            \n                \ncreatedata(data: GameDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('createdata')\n                \n            \n\n            \n                \n                    Defined in src/gamedata/gamedata.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GameDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getdata\n                        \n                    \n                \n            \n            \n                \ngetdata(title: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getdata/:title')\n                \n            \n\n            \n                \n                    Defined in src/gamedata/gamedata.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { GameDataDto } from './dto/gamedata.dto';\nimport { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { gamedataService } from './gamedata.service';\n\n@Controller('gamedata')\nexport class GameDataController {\n  constructor(private GameDataService: gamedataService) {}\n\n  @Post('createdata')\n  createdata(@Body() data: GameDataDto) {\n    return this.GameDataService.createdata(data.title, data.data);\n  }\n\n  @Get('getdata/:title')\n  getdata(@Param('title') title: string) {\n    return this.GameDataService.getdata(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameDataDto.html":{"url":"classes/GameDataDto.html","title":"class - GameDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gamedata/dto/gamedata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JSON\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gamedata/dto/gamedata.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gamedata/dto/gamedata.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class GameDataDto {\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @IsNotEmpty()\n  data: JSON;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamedataModule.html":{"url":"modules/GamedataModule.html","title":"module - GamedataModule","body":"\n                   \n\n\n\n\n    Modules\n    GamedataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GamedataModule\n\n\n\ncluster_GamedataModule_providers\n\n\n\n\ngamedataService\n\ngamedataService\n\n\n\nGamedataModule\n\nGamedataModule\n\nGamedataModule -->\n\ngamedataService->GamedataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gamedata/gamedata.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            gamedataService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameDataController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { gamedataService } from './gamedata.service';\nimport { GameDataController } from './gamedata.controller';\n\n@Module({\n  controllers: [GameDataController],\n  providers: [gamedataService],\n})\nexport class GamedataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetReviews.html":{"url":"classes/GetReviews.html","title":"class - GetReviews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetReviews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dto/get-reviews.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dto/get-reviews.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nexport class GetReviews {\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetVisitors.html":{"url":"classes/GetVisitors.html","title":"class - GetVisitors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetVisitors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitorcount/dto/get-visitor.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/visitorcount/dto/get-visitor.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class GetVisitors {\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtGuard.html":{"url":"classes/JwtGuard.html","title":"class - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt.guard.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guard/jwt.guard.ts:2\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport';\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaService } from './../../prisma/prisma.service';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(config: ConfigService, private prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: config.get('JWT_SECRET'),\n    });\n  }\n  async validate(payload: { sub: number; email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    });\n    delete user.hash;\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanDb\n                        \n                    \n                \n            \n            \n                \ncleanDb()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n\n  cleanDb() {\n    return this.$transaction([\n      this.bookmark.deleteMany(),\n      this.user.deleteMany(),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                review\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createreview\n                            \n                            \n                                getReviews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createreview\n                        \n                    \n                \n            \n            \n                \ncreatereview(data: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('post-review')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReviews\n                        \n                    \n                \n            \n            \n                \ngetReviews(title: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get-reviews/:title')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Param } from '@nestjs/common';\nimport { AuthDto } from './dto';\nimport { reviewsService } from './reviews.service';\n\n@Controller('review')\nexport class ReviewsController {\n  constructor(private ReviewService: reviewsService) {}\n\n  @Post('post-review')\n  createreview(@Body() data: AuthDto) {\n    return this.ReviewService.createreview(\n      data.title,\n      data.pointReview,\n      data.textReview,\n    );\n  }\n\n  @Get('get-reviews/:title')\n  getReviews(@Param('title') title: string) {\n    return this.ReviewService.getReviews(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nreviewsService\n\nreviewsService\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nreviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            reviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { reviewsService } from './reviews.service';\nimport { ReviewsController } from './reviews.controller';\nimport { Module } from '@nestjs/common';\n\n@Module({\n  controllers: [ReviewsController],\n  providers: [reviewsService],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editUser\n                            \n                            \n                                getMe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(userId: number, dto: EditUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMe\n                        \n                    \n                \n            \n            \n                \ngetMe(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { UserService } from './user.service';\nimport { JwtGuard } from './../auth/guard/jwt.guard';\nimport { Body, Controller, Get, Patch, UseGuards } from '@nestjs/common';\nimport { User } from '@prisma/client';\nimport { GetUser } from '../auth/decorator';\nimport { EditUserDto } from './dto';\n\n@UseGuards(JwtGuard)\n@Controller('users')\nexport class UserController {\n  constructor(private userService: UserService) {}\n  @Get('me')\n  getMe(@GetUser() user: User) {\n    return user;\n  }\n\n  @Patch()\n  editUser(@GetUser('id') userId: number, @Body() dto: EditUserDto) {\n    return this.userService.editUser(userId, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(userId: number, dto: EditUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EditUserDto } from './dto';\nimport { PrismaService } from './../prisma/prisma.service';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) {}\n  async editUser(userId: number, dto: EditUserDto) {\n    const user = await this.prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: {\n        ...dto,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VisitorController.html":{"url":"controllers/VisitorController.html","title":"controller - VisitorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VisitorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitorcount/visitorcount.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                visitorcount\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addtocount\n                            \n                            \n                                createcount\n                            \n                            \n                                getCount\n                            \n                            \n                                getVisitors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addtocount\n                        \n                    \n                \n            \n            \n                \naddtocount(data: VisitorData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('add')\n                \n            \n\n            \n                \n                    Defined in src/visitorcount/visitorcount.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VisitorData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createcount\n                        \n                    \n                \n            \n            \n                \ncreatecount(data: AuthData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('createcount')\n                \n            \n\n            \n                \n                    Defined in src/visitorcount/visitorcount.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AuthData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCount\n                        \n                    \n                \n            \n            \n                \ngetCount(data: VisitorData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('visitor')\n                \n            \n\n            \n                \n                    Defined in src/visitorcount/visitorcount.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                VisitorData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVisitors\n                        \n                    \n                \n            \n            \n                \ngetVisitors(title: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getvisitors/:title')\n                \n            \n\n            \n                \n                    Defined in src/visitorcount/visitorcount.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { visitorCountService } from './visitorcount.service';\nimport { Controller, Get, Post, Body, Patch, Param } from '@nestjs/common';\nimport { AuthData, VisitorData } from './dto';\n\n@Controller('visitorcount')\nexport class VisitorController {\n  constructor(private VisitorCountService: visitorCountService) {}\n  @Get('visitor')\n  getCount(@Body() data: VisitorData) {\n    return this.VisitorCountService.getCount(data.token);\n  }\n\n  @Post('createcount')\n  createcount(@Body() data: AuthData) {\n    console.log(data, 'mikä tämä on');\n    return this.VisitorCountService.createcount(data.token, data.title);\n  }\n\n  @Patch('add')\n  addtocount(@Body() data: VisitorData) {\n    return this.VisitorCountService.addtoCount(data.token);\n  }\n\n  @Get('getvisitors/:title')\n  getVisitors(@Param('title') title: string) {\n    return this.VisitorCountService.getVisitors(title);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VisitorData.html":{"url":"classes/VisitorData.html","title":"class - VisitorData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VisitorData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitorcount/dto/visitorcount.data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/visitorcount/dto/visitorcount.data.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class VisitorData {\n  @IsString()\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisitorcountModule.html":{"url":"modules/VisitorcountModule.html","title":"module - VisitorcountModule","body":"\n                   \n\n\n\n\n    Modules\n    VisitorcountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VisitorcountModule\n\n\n\ncluster_VisitorcountModule_providers\n\n\n\n\nvisitorCountService\n\nvisitorCountService\n\n\n\nVisitorcountModule\n\nVisitorcountModule\n\nVisitorcountModule -->\n\nvisitorCountService->VisitorcountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/visitorcount/visitorcount.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            visitorCountService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VisitorController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { visitorCountService } from './visitorcount.service';\nimport { VisitorController } from './visitorcount.controller';\nimport { Module } from '@nestjs/common';\n\n@Module({\n  controllers: [VisitorController],\n  providers: [visitorCountService],\n})\nexport class VisitorcountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorator/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt.guard.ts\n            \n            class\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gamedata/dto/gamedata.dto.ts\n            \n            class\n            GameDataDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gamedata/gamedata.controller.ts\n            \n            controller\n            GameDataController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gamedata/gamedata.service.ts\n            \n            injectable\n            gamedataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/dto/get-reviews.dto.ts\n            \n            class\n            GetReviews\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/reviews/dto/review.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reviews/reviews.service.ts\n            \n            injectable\n            reviewsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/edit-user.dto.ts\n            \n            class\n            EditUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/visitorcount/dto/auth.data.ts\n            \n            class\n            AuthData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/visitorcount/dto/get-visitor.dto.ts\n            \n            class\n            GetVisitors\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/visitorcount/dto/visitorcount.data.ts\n            \n            class\n            VisitorData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/visitorcount/visitorcount.controller.ts\n            \n            controller\n            VisitorController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/visitorcount/visitorcount.service.ts\n            \n            injectable\n            visitorCountService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @prisma/client : ^3.12.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv-cli : ^5.1.0\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            prisma : ^3.12.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/gamedataService.html":{"url":"injectables/gamedataService.html","title":"injectable - gamedataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  gamedataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gamedata/gamedata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createdata\n                            \n                            \n                                    Async\n                                getdata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/gamedata/gamedata.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createdata\n                        \n                    \n                \n            \n            \n                \n                    \n                    createdata(title: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/gamedata/gamedata.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getdata\n                        \n                    \n                \n            \n            \n                \n                    \n                    getdata(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/gamedata/gamedata.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaClientKnownRequestError } from '@prisma/client/runtime';\nimport { PrismaService } from './../prisma/prisma.service';\nimport { Injectable, ForbiddenException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class gamedataService {\n  constructor(private prisma: PrismaService) {}\n\n  async createdata(title: string, data: unknown) {\n    try {\n      const Data = await this.prisma.gameData.create({\n        data: {\n          title: title,\n          gameData: data as Prisma.JsonObject,\n        },\n      });\n      return Data;\n    } catch (e) {\n      if (e instanceof PrismaClientKnownRequestError) {\n        throw new ForbiddenException('Invalid data');\n      }\n    }\n  }\n\n  async getdata(title: string) {\n    return this.prisma.gameData.findMany({\n      where: {\n        title,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookmarkModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GamedataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisitorcountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GamedataModule\n\n\n\ncluster_GamedataModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_VisitorcountModule\n\n\n\ncluster_VisitorcountModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBookmarkModule\n\nBookmarkModule\n\nAppModule -->\n\nBookmarkModule->AppModule\n\n\n\n\n\nGamedataModule\n\nGamedataModule\n\nAppModule -->\n\nGamedataModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nVisitorcountModule\n\nVisitorcountModule\n\nAppModule -->\n\nVisitorcountModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\ngamedataService\n\ngamedataService\n\nGamedataModule -->\n\ngamedataService->GamedataModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nreviewsService\n\nreviewsService\n\nReviewsModule -->\n\nreviewsService->ReviewsModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nvisitorCountService\n\nvisitorCountService\n\nVisitorcountModule -->\n\nvisitorCountService->VisitorcountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Data API for future touchell shop\n        \n            License : UNLICENSED\n        \n            Author : Juho Puurunen\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/reviewsService.html":{"url":"injectables/reviewsService.html","title":"injectable - reviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  reviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createreview\n                            \n                            \n                                    Async\n                                getReviews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/reviews.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createreview\n                        \n                    \n                \n            \n            \n                \n                    \n                    createreview(title: string, pointReview: number, textReview?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pointReview\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    textReview\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getReviews\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReviews(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaService } from './../prisma/prisma.service';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class reviewsService {\n  constructor(private prisma: PrismaService) {}\n\n  async createreview(title: string, pointReview: number, textReview?: string) {\n    const review = await this.prisma.reviews.create({\n      data: {\n        title: title,\n        pointReview: pointReview,\n        textReview: textReview,\n      },\n    });\n    return review;\n  }\n\n  async getReviews(title: string) {\n    return this.prisma.reviews.findMany({\n      where: {\n        title,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorator/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    if (data) {\n      return request.user[data];\n    }\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/visitorCountService.html":{"url":"injectables/visitorCountService.html","title":"injectable - visitorCountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  visitorCountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitorcount/visitorcount.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addtoCount\n                            \n                            \n                                    Async\n                                createcount\n                            \n                            \n                                    Async\n                                getCount\n                            \n                            \n                                    Async\n                                getVisitors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/visitorcount/visitorcount.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addtoCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    addtoCount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/visitorcount/visitorcount.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createcount\n                        \n                    \n                \n            \n            \n                \n                    \n                    createcount(token: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/visitorcount/visitorcount.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/visitorcount/visitorcount.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVisitors\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVisitors(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/visitorcount/visitorcount.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaService } from './../prisma/prisma.service';\nimport { ForbiddenException, Injectable } from '@nestjs/common';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime';\n\n@Injectable()\nexport class visitorCountService {\n  constructor(private prisma: PrismaService) {}\n\n  async createcount(token: string, title: string) {\n    try {\n      const visitcount = await this.prisma.visitorCount.create({\n        data: {\n          token: token,\n          title: title,\n          count: 1,\n        },\n      });\n      return visitcount;\n    } catch (e) {\n      if (e instanceof PrismaClientKnownRequestError) {\n        if (e.code === 'P2002') {\n          throw new ForbiddenException('Token already exists');\n        }\n      }\n      throw e;\n    }\n  }\n\n  async getCount(token: string) {\n    try {\n      const visitor = await this.prisma.visitorCount.findUnique({\n        where: {\n          token: token,\n        },\n      });\n      return visitor;\n    } catch (e) {\n      if (e instanceof PrismaClientKnownRequestError) {\n        if (e.code === 'P2002') {\n          throw new ForbiddenException('Token not in the database');\n        }\n      }\n      throw e;\n    }\n  }\n\n  async addtoCount(token: string) {\n    try {\n      const visitor = await this.getCount(token);\n      const count = await this.prisma.visitorCount.update({\n        where: {\n          token: token,\n        },\n        data: {\n          count: visitor.count + 1,\n        },\n      });\n      return count;\n    } catch (e) {\n      if (e instanceof PrismaClientKnownRequestError) {\n        throw new ForbiddenException('No token in the database');\n      }\n    }\n  }\n\n  async getVisitors(title: string) {\n    return this.prisma.visitorCount.findMany({\n      where: {\n        title,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
